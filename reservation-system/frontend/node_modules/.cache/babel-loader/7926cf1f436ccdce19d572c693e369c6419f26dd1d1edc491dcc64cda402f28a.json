{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\reserve\\\\reservation-system\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState, useEffect } from 'react';\nimport CalendarComponent from './CalenderComponent';\nimport LoginModal from './LoginModal';\nimport BookingModal from './BookingModal';\nimport { auth } from './firebaseConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [showLoginModal, setShowLoginModal] = useState(false);\n  const [showBookingModal, setShowBookingModal] = useState(false);\n  const [selectedStartTime, setSelectedStartTime] = useState(null);\n  const [selectedEndTime, setSelectedEndTime] = useState(null);\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(currentUser => {\n      setUser(currentUser);\n    });\n    return unsubscribe;\n  }, []);\n  const handleDateClick = startTime => {\n    const endTime = new Date(new Date(startTime).getTime() + 15 * 60000); // 15分後の終了時刻\n    setSelectedStartTime(startTime);\n    setSelectedEndTime(endTime);\n    setShowBookingModal(true);\n  };\n  const handleBookingConfirm = (start, end) => {\n    if (user) {\n      // ログイン済みの場合は直接予約完了\n      bookReservation(start, end);\n    } else {\n      // ログインが必要な場合はログインモーダルを表示\n      setShowBookingModal(false);\n      setShowLoginModal(true);\n    }\n  };\n  const bookReservation = (start, end) => {\n    // 予約処理のロジック（例：バックエンドへのAPI呼び出し）\n    console.log('予約が完了しました:', start, end);\n    setShowBookingModal(false);\n    alert(`予約が完了しました: ${start} - ${end}`);\n  };\n  const handleLoginSuccess = () => {\n    setShowLoginModal(false);\n    bookReservation(selectedStartTime, selectedEndTime);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(CalendarComponent, {\n      onDateClick: handleDateClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), showLoginModal && /*#__PURE__*/_jsxDEV(LoginModal, {\n      setShowLoginModal: setShowLoginModal,\n      onLogin: handleLoginSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), showBookingModal && /*#__PURE__*/_jsxDEV(BookingModal, {\n      startTime: selectedStartTime,\n      endTime: selectedEndTime,\n      onClose: () => setShowBookingModal(false),\n      onSave: handleBookingConfirm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"QoqGiXd2spzo+/PWkxS2snVG5Ys=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","CalendarComponent","LoginModal","BookingModal","auth","jsxDEV","_jsxDEV","App","_s","user","setUser","showLoginModal","setShowLoginModal","showBookingModal","setShowBookingModal","selectedStartTime","setSelectedStartTime","selectedEndTime","setSelectedEndTime","unsubscribe","onAuthStateChanged","currentUser","handleDateClick","startTime","endTime","Date","getTime","handleBookingConfirm","start","end","bookReservation","console","log","alert","handleLoginSuccess","children","onDateClick","fileName","_jsxFileName","lineNumber","columnNumber","onLogin","onClose","onSave","_c","$RefreshReg$"],"sources":["C:/dev/reserve/reservation-system/frontend/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState, useEffect } from 'react';\nimport CalendarComponent from './CalenderComponent';\nimport LoginModal from './LoginModal';\nimport BookingModal from './BookingModal';\nimport { auth } from './firebaseConfig';\n\nconst App = () => {\n  const [user, setUser] = useState(null);\n  const [showLoginModal, setShowLoginModal] = useState(false);\n  const [showBookingModal, setShowBookingModal] = useState(false);\n  const [selectedStartTime, setSelectedStartTime] = useState(null);\n  const [selectedEndTime, setSelectedEndTime] = useState(null);\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((currentUser) => {\n      setUser(currentUser);\n    });\n    return unsubscribe;\n  }, []);\n\n  const handleDateClick = (startTime) => {\n    const endTime = new Date(new Date(startTime).getTime() + 15 * 60000); // 15分後の終了時刻\n    setSelectedStartTime(startTime);\n    setSelectedEndTime(endTime);\n    setShowBookingModal(true);\n  };\n\n  const handleBookingConfirm = (start, end) => {\n    if (user) {\n      // ログイン済みの場合は直接予約完了\n      bookReservation(start, end);\n    } else {\n      // ログインが必要な場合はログインモーダルを表示\n      setShowBookingModal(false);\n      setShowLoginModal(true);\n    }\n  };\n\n  const bookReservation = (start, end) => {\n    // 予約処理のロジック（例：バックエンドへのAPI呼び出し）\n    console.log('予約が完了しました:', start, end);\n    setShowBookingModal(false);\n    alert(`予約が完了しました: ${start} - ${end}`);\n  };\n\n  const handleLoginSuccess = () => {\n    setShowLoginModal(false);\n    bookReservation(selectedStartTime, selectedEndTime);\n  };\n\n  return (\n    <div>\n      <CalendarComponent onDateClick={handleDateClick} />\n      {showLoginModal && (\n        <LoginModal \n          setShowLoginModal={setShowLoginModal} \n          onLogin={handleLoginSuccess}\n        />\n      )}\n      {showBookingModal && (\n        <BookingModal \n          startTime={selectedStartTime} \n          endTime={selectedEndTime} \n          onClose={() => setShowBookingModal(false)} \n          onSave={handleBookingConfirm}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}